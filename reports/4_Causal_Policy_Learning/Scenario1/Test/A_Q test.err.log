Traceback (most recent call last):
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/alinaxu/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# TODO: there might be something wrong with the multiple step as the difference between A-learning and Q-learning is large

# A demo with code on how to use the package
from causaldm.learners import ALearning
from causaldm.test import shared_simulation
import numpy as np

ALearn = ALearning.ALearning()
model_info = [{'X_prop': list(range(2)),
              'X_q0': list(range(2)),
               'X_C':{1:list(range(2))},
              'action_space': [0,1]},
             {'X_prop': [0,4],
              'X_q0': list(range(5)),
               'X_C':{1:[0,4]},
              'action_space': [0,1]}]
ALearn.train(X, A, Y, model_info, T=2, bootstrap = True, n_bs = 100)
fitted_params,fitted_value,value_avg,value_std,params=ALearn.estimate_value_boots()
print('Value_hat:',value_avg,'Value_std:',value_std)
##estimated contrast model at t = 0
print('estimated_contrast:',params[0]['contrast'])
print('estimated_contrast:',params[1]['contrast'])
print('estimated_prop:',params[0]['prop'])
print('estimated_prop:',params[1]['prop'])

# recommend action
opt_d = ALearn.recommend().head()
# get the estimated value of the optimal regime
V_hat = ALearn.estimate_value()
print("opt regime:",opt_d)
print("opt value:",V_hat)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/9j/vb5nb4rd5bx0gr1q5ytx9q600000gn/T/ipykernel_35117/1171830641.py[0m in [0;36m<module>[0;34m[0m
[1;32m     15[0m                [0;34m'X_C'[0m[0;34m:[0m[0;34m{[0m[0;36m1[0m[0;34m:[0m[0;34m[[0m[0;36m0[0m[0;34m,[0m[0;36m4[0m[0;34m][0m[0;34m}[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     16[0m               'action_space': [0,1]}]
[0;32m---> 17[0;31m [0mALearn[0m[0;34m.[0m[0mtrain[0m[0;34m([0m[0mX[0m[0;34m,[0m [0mA[0m[0;34m,[0m [0mY[0m[0;34m,[0m [0mmodel_info[0m[0;34m,[0m [0mT[0m[0;34m=[0m[0;36m2[0m[0;34m,[0m [0mbootstrap[0m [0;34m=[0m [0;32mTrue[0m[0;34m,[0m [0mn_bs[0m [0;34m=[0m [0;36m100[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m [0mfitted_params[0m[0;34m,[0m[0mfitted_value[0m[0;34m,[0m[0mvalue_avg[0m[0;34m,[0m[0mvalue_std[0m[0;34m,[0m[0mparams[0m[0;34m=[0m[0mALearn[0m[0;34m.[0m[0mestimate_value_boots[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     19[0m [0mprint[0m[0;34m([0m[0;34m'Value_hat:'[0m[0;34m,[0m[0mvalue_avg[0m[0;34m,[0m[0;34m'Value_std:'[0m[0;34m,[0m[0mvalue_std[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/lib/python3.9/site-packages/causaldm/learners/ALearning.py[0m in [0;36mtrain[0;34m(self, X, A, Y, model_info, T, true_prop, regime, evaluate, bootstrap, n_bs)[0m
[1;32m     35[0m         [0;32massert[0m [0mlen[0m[0;34m([0m[0mmodel_info[0m[0;34m)[0m [0;34m==[0m [0mT[0m[0;34m[0m[0;34m[0m[0m
[1;32m     36[0m         [0;32mif[0m [0;32mnot[0m [0misinstance[0m[0;34m([0m[0mX[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mndarray[0m[0;34m)[0m [0;32mor[0m [0;32mnot[0m [0misinstance[0m[0;34m([0m[0mA[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mndarray[0m[0;34m)[0m [0;32mor[0m [0;32mnot[0m [0misinstance[0m[0;34m([0m[0mY[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mndarray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 37[0;31m             [0;32mraise[0m [0mTypeError[0m[0;34m([0m[0;34m'invalid type: input data should be in a numpy array'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     38[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0mA[0m[0;34m.[0m[0mshape[0m[0;34m)[0m[0;34m==[0m[0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     39[0m             [0mA[0m [0;34m=[0m [0mA[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mnewaxis[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: invalid type: input data should be in a numpy array
TypeError: invalid type: input data should be in a numpy array

