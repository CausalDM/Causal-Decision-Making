Traceback (most recent call last):
  File "D:\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "D:\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "D:\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "D:\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "D:\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "D:\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "D:\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "D:\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%run train.py --data_type='realdata' --real_data_file='covid19.pkl' --epochs=100 --node_number=32 --sample_size=38 --batch_size=19 --rep_number=1


------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mArgumentError[0m                             Traceback (most recent call last)
File [1;32mD:\anaconda3\lib\argparse.py:1857[0m, in [0;36mArgumentParser.parse_known_args[1;34m(self, args, namespace)[0m
[0;32m   1856[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1857[0m     namespace, args [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_known_args[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mnamespace[49m[43m)[49m
[0;32m   1858[0m [38;5;28;01mexcept[39;00m ArgumentError:

File [1;32mD:\anaconda3\lib\argparse.py:2066[0m, in [0;36mArgumentParser._parse_known_args[1;34m(self, arg_strings, namespace)[0m
[0;32m   2065[0m     [38;5;66;03m# consume the next optional and any arguments for it[39;00m
[1;32m-> 2066[0m     start_index [38;5;241m=[39m [43mconsume_optional[49m[43m([49m[43mstart_index[49m[43m)[49m
[0;32m   2068[0m [38;5;66;03m# consume any positionals following the last Optional[39;00m

File [1;32mD:\anaconda3\lib\argparse.py:2006[0m, in [0;36mArgumentParser._parse_known_args.<locals>.consume_optional[1;34m(start_index)[0m
[0;32m   2005[0m [38;5;28;01mfor[39;00m action, args, option_string [38;5;129;01min[39;00m action_tuples:
[1;32m-> 2006[0m     [43mtake_action[49m[43m([49m[43maction[49m[43m,[49m[43m [49m[43margs[49m[43m,[49m[43m [49m[43moption_string[49m[43m)[49m
[0;32m   2007[0m [38;5;28;01mreturn[39;00m stop

File [1;32mD:\anaconda3\lib\argparse.py:1918[0m, in [0;36mArgumentParser._parse_known_args.<locals>.take_action[1;34m(action, argument_strings, option_string)[0m
[0;32m   1917[0m seen_actions[38;5;241m.[39madd(action)
[1;32m-> 1918[0m argument_values [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_values[49m[43m([49m[43maction[49m[43m,[49m[43m [49m[43margument_strings[49m[43m)[49m
[0;32m   1920[0m [38;5;66;03m# error if this argument is not allowed with other previously[39;00m
[0;32m   1921[0m [38;5;66;03m# seen arguments, assuming that actions that use the default[39;00m
[0;32m   1922[0m [38;5;66;03m# value don't really count as "present"[39;00m

File [1;32mD:\anaconda3\lib\argparse.py:2450[0m, in [0;36mArgumentParser._get_values[1;34m(self, action, arg_strings)[0m
[0;32m   2449[0m     value [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_value(action, arg_string)
[1;32m-> 2450[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_value[49m[43m([49m[43maction[49m[43m,[49m[43m [49m[43mvalue[49m[43m)[49m
[0;32m   2452[0m [38;5;66;03m# REMAINDER arguments convert all values, checking none[39;00m

File [1;32mD:\anaconda3\lib\argparse.py:2506[0m, in [0;36mArgumentParser._check_value[1;34m(self, action, value)[0m
[0;32m   2505[0m msg [38;5;241m=[39m _([38;5;124m'[39m[38;5;124minvalid choice: [39m[38;5;132;01m%(value)r[39;00m[38;5;124m (choose from [39m[38;5;132;01m%(choices)s[39;00m[38;5;124m)[39m[38;5;124m'[39m)
[1;32m-> 2506[0m [38;5;28;01mraise[39;00m ArgumentError(action, msg [38;5;241m%[39m args)

[1;31mArgumentError[0m: argument --data_type: invalid choice: "'realdata'" (choose from 'realdata', 'simulation', 'create_new')

During handling of the above exception, another exception occurred:

[1;31mSystemExit[0m                                Traceback (most recent call last)
File [1;32mD:\anaconda3\lib\site-packages\IPython\core\interactiveshell.py:2727[0m, in [0;36mInteractiveShell.safe_execfile[1;34m(self, fname, exit_ignore, raise_exceptions, shell_futures, *where)[0m
[0;32m   2726[0m     glob, loc [38;5;241m=[39m (where [38;5;241m+[39m ([38;5;28;01mNone[39;00m, ))[:[38;5;241m2[39m]
[1;32m-> 2727[0m     [43mpy3compat[49m[38;5;241;43m.[39;49m[43mexecfile[49m[43m([49m
[0;32m   2728[0m [43m        [49m[43mfname[49m[43m,[49m[43m [49m[43mglob[49m[43m,[49m[43m [49m[43mloc[49m[43m,[49m
[0;32m   2729[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcompile[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mshell_futures[49m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[0;32m   2730[0m [38;5;28;01mexcept[39;00m [38;5;167;01mSystemExit[39;00m [38;5;28;01mas[39;00m status:
[0;32m   2731[0m     [38;5;66;03m# If the call was made with 0 or None exit status (sys.exit(0)[39;00m
[0;32m   2732[0m     [38;5;66;03m# or sys.exit() ), don't bother showing a traceback, as both of[39;00m
[1;32m   (...)[0m
[0;32m   2738[0m     [38;5;66;03m# For other exit status, we show the exception unless[39;00m
[0;32m   2739[0m     [38;5;66;03m# explicitly silenced, but only in short form.[39;00m

File [1;32mD:\anaconda3\lib\site-packages\IPython\utils\py3compat.py:55[0m, in [0;36mexecfile[1;34m(fname, glob, loc, compiler)[0m
[0;32m     54[0m compiler [38;5;241m=[39m compiler [38;5;129;01mor[39;00m [38;5;28mcompile[39m
[1;32m---> 55[0m [43mexec[49m[43m([49m[43mcompiler[49m[43m([49m[43mf[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mfname[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mexec[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m,[49m[43m [49m[43mglob[49m[43m,[49m[43m [49m[43mloc[49m[43m)[49m

File [1;32mD:\GitHub\Causal-Decision-Making\2_Causal_Structure_Learning\train.py:62[0m, in [0;36m<module>[1;34m[0m
[0;32m     60[0m parser[38;5;241m.[39madd_argument([38;5;124m'[39m[38;5;124m--original_lr[39m[38;5;124m'[39m, [38;5;28mtype[39m [38;5;241m=[39m [38;5;28mfloat[39m, default [38;5;241m=[39m [38;5;241m3e-3[39m, help [38;5;241m=[39m [38;5;124m'[39m[38;5;124mInitial learning rate.[39m[38;5;124m'[39m)
[1;32m---> 62[0m args [38;5;241m=[39m [43mparser[49m[38;5;241;43m.[39;49m[43mparse_args[49m[43m([49m[43m)[49m
[0;32m     63[0m [38;5;28mprint[39m(args)

File [1;32mD:\anaconda3\lib\argparse.py:1824[0m, in [0;36mArgumentParser.parse_args[1;34m(self, args, namespace)[0m
[0;32m   1823[0m [38;5;28;01mdef[39;00m [38;5;21mparse_args[39m([38;5;28mself[39m, args[38;5;241m=[39m[38;5;28;01mNone[39;00m, namespace[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m-> 1824[0m     args, argv [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparse_known_args[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mnamespace[49m[43m)[49m
[0;32m   1825[0m     [38;5;28;01mif[39;00m argv:

File [1;32mD:\anaconda3\lib\argparse.py:1860[0m, in [0;36mArgumentParser.parse_known_args[1;34m(self, args, namespace)[0m
[0;32m   1859[0m         err [38;5;241m=[39m _sys[38;5;241m.[39mexc_info()[[38;5;241m1[39m]
[1;32m-> 1860[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43merr[49m[43m)[49m[43m)[49m
[0;32m   1861[0m [38;5;28;01melse[39;00m:

File [1;32mD:\anaconda3\lib\argparse.py:2581[0m, in [0;36mArgumentParser.error[1;34m(self, message)[0m
[0;32m   2580[0m args [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mprog[39m[38;5;124m'[39m: [38;5;28mself[39m[38;5;241m.[39mprog, [38;5;124m'[39m[38;5;124mmessage[39m[38;5;124m'[39m: message}
[1;32m-> 2581[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mexit[49m[43m([49m[38;5;241;43m2[39;49m[43m,[49m[43m [49m[43m_[49m[43m([49m[38;5;124;43m'[39;49m[38;5;132;43;01m%(prog)s[39;49;00m[38;5;124;43m: error: [39;49m[38;5;132;43;01m%(message)s[39;49;00m[38;5;130;43;01m\n[39;49;00m[38;5;124;43m'[39;49m[43m)[49m[43m [49m[38;5;241;43m%[39;49m[43m [49m[43margs[49m[43m)[49m

File [1;32mD:\anaconda3\lib\argparse.py:2568[0m, in [0;36mArgumentParser.exit[1;34m(self, status, message)[0m
[0;32m   2567[0m     [38;5;28mself[39m[38;5;241m.[39m_print_message(message, _sys[38;5;241m.[39mstderr)
[1;32m-> 2568[0m [43m_sys[49m[38;5;241;43m.[39;49m[43mexit[49m[43m([49m[43mstatus[49m[43m)[49m

[1;31mSystemExit[0m: 2

During handling of the above exception, another exception occurred:

[1;31mAssertionError[0m                            Traceback (most recent call last)
Input [1;32mIn [2][0m, in [0;36m<cell line: 1>[1;34m()[0m
[1;32m----> 1[0m [43mget_ipython[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mrun_line_magic[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mrun[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mtrain.py --data_type=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mrealdata[39;49m[38;5;124;43m'[39;49m[38;5;124;43m --real_data_file=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mcovid19.pkl[39;49m[38;5;124;43m'[39;49m[38;5;124;43m --epochs=100 --node_number=32 --sample_size=38 --batch_size=19 --rep_number=1[39;49m[38;5;124;43m"[39;49m[43m)[49m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\interactiveshell.py:2294[0m, in [0;36mInteractiveShell.run_line_magic[1;34m(self, magic_name, line, _stack_depth)[0m
[0;32m   2292[0m     kwargs[[38;5;124m'[39m[38;5;124mlocal_ns[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_local_scope(stack_depth)
[0;32m   2293[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[1;32m-> 2294[0m     result [38;5;241m=[39m fn([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m   2295[0m [38;5;28;01mreturn[39;00m result

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\magics\execution.py:829[0m, in [0;36mExecutionMagics.run[1;34m(self, parameter_s, runner, file_finder)[0m
[0;32m    826[0m             [38;5;28mself[39m[38;5;241m.[39m_run_with_timing(run, nruns)
[0;32m    827[0m         [38;5;28;01melse[39;00m:
[0;32m    828[0m             [38;5;66;03m# regular execution[39;00m
[1;32m--> 829[0m             [43mrun[49m[43m([49m[43m)[49m
[0;32m    831[0m [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124mi[39m[38;5;124m'[39m [38;5;129;01min[39;00m opts:
[0;32m    832[0m     [38;5;28mself[39m[38;5;241m.[39mshell[38;5;241m.[39muser_ns[[38;5;124m'[39m[38;5;124m__name__[39m[38;5;124m'[39m] [38;5;241m=[39m __name__save

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\magics\execution.py:814[0m, in [0;36mExecutionMagics.run.<locals>.run[1;34m()[0m
[0;32m    813[0m [38;5;28;01mdef[39;00m [38;5;21mrun[39m():
[1;32m--> 814[0m     [43mrunner[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[43mprog_ns[49m[43m,[49m[43m [49m[43mprog_ns[49m[43m,[49m
[0;32m    815[0m [43m            [49m[43mexit_ignore[49m[38;5;241;43m=[39;49m[43mexit_ignore[49m[43m)[49m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\interactiveshell.py:2744[0m, in [0;36mInteractiveShell.safe_execfile[1;34m(self, fname, exit_ignore, raise_exceptions, shell_futures, *where)[0m
[0;32m   2742[0m             [38;5;28;01mraise[39;00m
[0;32m   2743[0m         [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m exit_ignore:
[1;32m-> 2744[0m             [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mshowtraceback[49m[43m([49m[43mexception_only[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[0;32m   2745[0m [38;5;28;01mexcept[39;00m:
[0;32m   2746[0m     [38;5;28;01mif[39;00m raise_exceptions:

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\interactiveshell.py:1972[0m, in [0;36mInteractiveShell.showtraceback[1;34m(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)[0m
[0;32m   1969[0m [38;5;28;01mif[39;00m exception_only:
[0;32m   1970[0m     stb [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mAn exception has occurred, use [39m[38;5;124m%[39m[38;5;124mtb to see [39m[38;5;124m'[39m
[0;32m   1971[0m            [38;5;124m'[39m[38;5;124mthe full traceback.[39m[38;5;130;01m\n[39;00m[38;5;124m'[39m]
[1;32m-> 1972[0m     stb[38;5;241m.[39mextend([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mInteractiveTB[49m[38;5;241;43m.[39;49m[43mget_exception_only[49m[43m([49m[43metype[49m[43m,[49m
[0;32m   1973[0m [43m                                                     [49m[43mvalue[49m[43m)[49m)
[0;32m   1974[0m [38;5;28;01melse[39;00m:
[0;32m   1975[0m     [38;5;28;01mtry[39;00m:
[0;32m   1976[0m         [38;5;66;03m# Exception classes can customise their traceback - we[39;00m
[0;32m   1977[0m         [38;5;66;03m# use this in IPython.parallel for exceptions occurring[39;00m
[0;32m   1978[0m         [38;5;66;03m# in the engines. This should return a list of strings.[39;00m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:585[0m, in [0;36mListTB.get_exception_only[1;34m(self, etype, value)[0m
[0;32m    577[0m [38;5;28;01mdef[39;00m [38;5;21mget_exception_only[39m([38;5;28mself[39m, etype, value):
[0;32m    578[0m     [38;5;124;03m"""Only print the exception type and message, without a traceback.[39;00m
[0;32m    579[0m 
[0;32m    580[0m [38;5;124;03m    Parameters[39;00m
[1;32m   (...)[0m
[0;32m    583[0m [38;5;124;03m    value : exception value[39;00m
[0;32m    584[0m [38;5;124;03m    """[39;00m
[1;32m--> 585[0m     [38;5;28;01mreturn[39;00m [43mListTB[49m[38;5;241;43m.[39;49m[43mstructured_traceback[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43metype[49m[43m,[49m[43m [49m[43mvalue[49m[43m)[49m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:443[0m, in [0;36mListTB.structured_traceback[1;34m(self, etype, evalue, etb, tb_offset, context)[0m
[0;32m    440[0m     chained_exc_ids[38;5;241m.[39madd([38;5;28mid[39m(exception[[38;5;241m1[39m]))
[0;32m    441[0m     chained_exceptions_tb_offset [38;5;241m=[39m [38;5;241m0[39m
[0;32m    442[0m     out_list [38;5;241m=[39m (
[1;32m--> 443[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstructured_traceback[49m[43m([49m
[0;32m    444[0m [43m            [49m[43metype[49m[43m,[49m[43m [49m[43mevalue[49m[43m,[49m[43m [49m[43m([49m[43metb[49m[43m,[49m[43m [49m[43mchained_exc_ids[49m[43m)[49m[43m,[49m
[0;32m    445[0m [43m            [49m[43mchained_exceptions_tb_offset[49m[43m,[49m[43m [49m[43mcontext[49m[43m)[49m
[0;32m    446[0m         [38;5;241m+[39m chained_exception_message
[0;32m    447[0m         [38;5;241m+[39m out_list)
[0;32m    449[0m [38;5;28;01mreturn[39;00m out_list

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:1118[0m, in [0;36mAutoFormattedTB.structured_traceback[1;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[0;32m   1116[0m [38;5;28;01melse[39;00m:
[0;32m   1117[0m     [38;5;28mself[39m[38;5;241m.[39mtb [38;5;241m=[39m tb
[1;32m-> 1118[0m [38;5;28;01mreturn[39;00m [43mFormattedTB[49m[38;5;241;43m.[39;49m[43mstructured_traceback[49m[43m([49m
[0;32m   1119[0m [43m    [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43metype[49m[43m,[49m[43m [49m[43mvalue[49m[43m,[49m[43m [49m[43mtb[49m[43m,[49m[43m [49m[43mtb_offset[49m[43m,[49m[43m [49m[43mnumber_of_lines_of_context[49m[43m)[49m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:1012[0m, in [0;36mFormattedTB.structured_traceback[1;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[0;32m   1009[0m mode [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mmode
[0;32m   1010[0m [38;5;28;01mif[39;00m mode [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mverbose_modes:
[0;32m   1011[0m     [38;5;66;03m# Verbose modes need a full traceback[39;00m
[1;32m-> 1012[0m     [38;5;28;01mreturn[39;00m [43mVerboseTB[49m[38;5;241;43m.[39;49m[43mstructured_traceback[49m[43m([49m
[0;32m   1013[0m [43m        [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43metype[49m[43m,[49m[43m [49m[43mvalue[49m[43m,[49m[43m [49m[43mtb[49m[43m,[49m[43m [49m[43mtb_offset[49m[43m,[49m[43m [49m[43mnumber_of_lines_of_context[49m
[0;32m   1014[0m [43m    [49m[43m)[49m
[0;32m   1015[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mMinimal[39m[38;5;124m'[39m:
[0;32m   1016[0m     [38;5;28;01mreturn[39;00m ListTB[38;5;241m.[39mget_exception_only([38;5;28mself[39m, etype, value)

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:865[0m, in [0;36mVerboseTB.structured_traceback[1;34m(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)[0m
[0;32m    856[0m [38;5;28;01mdef[39;00m [38;5;21mstructured_traceback[39m(
[0;32m    857[0m     [38;5;28mself[39m,
[0;32m    858[0m     etype: [38;5;28mtype[39m,
[1;32m   (...)[0m
[0;32m    862[0m     number_of_lines_of_context: [38;5;28mint[39m [38;5;241m=[39m [38;5;241m5[39m,
[0;32m    863[0m ):
[0;32m    864[0m     [38;5;124;03m"""Return a nice text document describing the traceback."""[39;00m
[1;32m--> 865[0m     formatted_exception [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mformat_exception_as_a_whole[49m[43m([49m[43metype[49m[43m,[49m[43m [49m[43mevalue[49m[43m,[49m[43m [49m[43metb[49m[43m,[49m[43m [49m[43mnumber_of_lines_of_context[49m[43m,[49m
[0;32m    866[0m [43m                                                           [49m[43mtb_offset[49m[43m)[49m
[0;32m    868[0m     colors [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mColors  [38;5;66;03m# just a shorthand + quicker name lookup[39;00m
[0;32m    869[0m     colorsnormal [38;5;241m=[39m colors[38;5;241m.[39mNormal  [38;5;66;03m# used a lot[39;00m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:799[0m, in [0;36mVerboseTB.format_exception_as_a_whole[1;34m(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)[0m
[0;32m    796[0m [38;5;28;01massert[39;00m [38;5;28misinstance[39m(tb_offset, [38;5;28mint[39m)
[0;32m    797[0m head [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mprepare_header(etype, [38;5;28mself[39m[38;5;241m.[39mlong_header)
[0;32m    798[0m records [38;5;241m=[39m (
[1;32m--> 799[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_records[49m[43m([49m[43metb[49m[43m,[49m[43m [49m[43mnumber_of_lines_of_context[49m[43m,[49m[43m [49m[43mtb_offset[49m[43m)[49m [38;5;28;01mif[39;00m etb [38;5;28;01melse[39;00m []
[0;32m    800[0m )
[0;32m    802[0m frames [38;5;241m=[39m []
[0;32m    803[0m skipped [38;5;241m=[39m [38;5;241m0[39m

File [1;32mD:\anaconda3\lib\site-packages\IPython\core\ultratb.py:854[0m, in [0;36mVerboseTB.get_records[1;34m(self, etb, number_of_lines_of_context, tb_offset)[0m
[0;32m    848[0m     formatter [38;5;241m=[39m [38;5;28;01mNone[39;00m
[0;32m    849[0m options [38;5;241m=[39m stack_data[38;5;241m.[39mOptions(
[0;32m    850[0m     before[38;5;241m=[39mbefore,
[0;32m    851[0m     after[38;5;241m=[39mafter,
[0;32m    852[0m     pygments_formatter[38;5;241m=[39mformatter,
[0;32m    853[0m )
[1;32m--> 854[0m [38;5;28;01mreturn[39;00m [38;5;28;43mlist[39;49m[43m([49m[43mstack_data[49m[38;5;241;43m.[39;49m[43mFrameInfo[49m[38;5;241;43m.[39;49m[43mstack_data[49m[43m([49m[43metb[49m[43m,[49m[43m [49m[43moptions[49m[38;5;241;43m=[39;49m[43moptions[49m[43m)[49m[43m)[49m[tb_offset:]

File [1;32mD:\anaconda3\lib\site-packages\stack_data\core.py:546[0m, in [0;36mFrameInfo.stack_data[1;34m(cls, frame_or_tb, options, collapse_repeated_frames)[0m
[0;32m    530[0m [38;5;129m@classmethod[39m
[0;32m    531[0m [38;5;28;01mdef[39;00m [38;5;21mstack_data[39m(
[0;32m    532[0m         [38;5;28mcls[39m,
[1;32m   (...)[0m
[0;32m    536[0m         collapse_repeated_frames: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m    537[0m ) [38;5;241m-[39m[38;5;241m>[39m Iterator[Union[[38;5;124m'[39m[38;5;124mFrameInfo[39m[38;5;124m'[39m, RepeatedFrames]]:
[0;32m    538[0m     [38;5;124;03m"""[39;00m
[0;32m    539[0m [38;5;124;03m    An iterator of FrameInfo and RepeatedFrames objects representing[39;00m
[0;32m    540[0m [38;5;124;03m    a full traceback or stack. Similar consecutive frames are collapsed into RepeatedFrames[39;00m
[1;32m   (...)[0m
[0;32m    544[0m [38;5;124;03m    and optionally an Options object to configure.[39;00m
[0;32m    545[0m [38;5;124;03m    """[39;00m
[1;32m--> 546[0m     stack [38;5;241m=[39m [38;5;28;43mlist[39;49m[43m([49m[43miter_stack[49m[43m([49m[43mframe_or_tb[49m[43m)[49m[43m)[49m
[0;32m    548[0m     [38;5;66;03m# Reverse the stack from a frame so that it's in the same order[39;00m
[0;32m    549[0m     [38;5;66;03m# as the order from a traceback, which is the order of a printed[39;00m
[0;32m    550[0m     [38;5;66;03m# traceback when read top to bottom (most recent call last)[39;00m
[0;32m    551[0m     [38;5;28;01mif[39;00m is_frame(frame_or_tb):

File [1;32mD:\anaconda3\lib\site-packages\stack_data\utils.py:98[0m, in [0;36miter_stack[1;34m(frame_or_tb)[0m
[0;32m     96[0m [38;5;28;01mwhile[39;00m frame_or_tb:
[0;32m     97[0m     [38;5;28;01myield[39;00m frame_or_tb
[1;32m---> 98[0m     [38;5;28;01mif[39;00m [43mis_frame[49m[43m([49m[43mframe_or_tb[49m[43m)[49m:
[0;32m     99[0m         frame_or_tb [38;5;241m=[39m frame_or_tb[38;5;241m.[39mf_back
[0;32m    100[0m     [38;5;28;01melse[39;00m:

File [1;32mD:\anaconda3\lib\site-packages\stack_data\utils.py:91[0m, in [0;36mis_frame[1;34m(frame_or_tb)[0m
[0;32m     90[0m [38;5;28;01mdef[39;00m [38;5;21mis_frame[39m(frame_or_tb: Union[FrameType, TracebackType]) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mbool[39m:
[1;32m---> 91[0m     [43massert_[49m[43m([49m[38;5;28;43misinstance[39;49m[43m([49m[43mframe_or_tb[49m[43m,[49m[43m [49m[43m([49m[43mtypes[49m[38;5;241;43m.[39;49m[43mFrameType[49m[43m,[49m[43m [49m[43mtypes[49m[38;5;241;43m.[39;49m[43mTracebackType[49m[43m)[49m[43m)[49m[43m)[49m
[0;32m     92[0m     [38;5;28;01mreturn[39;00m [38;5;28misinstance[39m(frame_or_tb, (types[38;5;241m.[39mFrameType,))

File [1;32mD:\anaconda3\lib\site-packages\stack_data\utils.py:172[0m, in [0;36massert_[1;34m(condition, error)[0m
[0;32m    170[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(error, [38;5;28mstr[39m):
[0;32m    171[0m     error [38;5;241m=[39m [38;5;167;01mAssertionError[39;00m(error)
[1;32m--> 172[0m [38;5;28;01mraise[39;00m error

[1;31mAssertionError[0m: 
AssertionError: 

